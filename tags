!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUFSIZE	src/WxLog.cpp	10;"	d	file:
CPP	Makefile	/^CPP     = g++$/;"	m
Debug	src/WxLog.cpp	/^void WxLog::Debug(std::string parameter)$/;"	f	class:WxLog
EXENAME	Makefile	/^EXENAME = WEIXIN$/;"	m
FILENAME	main.cpp	89;"	d	file:
FTS5_TOKENIZE_AUX	include/sqlite3.h	10133;"	d
FTS5_TOKENIZE_DOCUMENT	include/sqlite3.h	10132;"	d
FTS5_TOKENIZE_PREFIX	include/sqlite3.h	10131;"	d
FTS5_TOKENIZE_QUERY	include/sqlite3.h	10130;"	d
FTS5_TOKEN_COLOCATED	include/sqlite3.h	10137;"	d
FULLY_WITHIN	include/sqlite3.h	8318;"	d
Fts5Context	include/sqlite3.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5ExtensionApi	include/sqlite3.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	include/sqlite3.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5PhraseIter	include/sqlite3.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	include/sqlite3.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5Tokenizer	include/sqlite3.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
GetMessageStart	src/WxInitMessage.cpp	/^void WxInitMessage::GetMessageStart()$/;"	f	class:WxInitMessage
GetQRcode	src/HttpSocket.cpp	/^bool HttpSocket::GetQRcode()$/;"	f	class:HttpSocket
GetUuid	src/HttpSocket.cpp	/^bool HttpSocket::GetUuid()$/;"	f	class:HttpSocket
HttpSocket	include/HttpSocket.h	/^class HttpSocket$/;"	c
HttpSocket	src/HttpSocket.cpp	/^HttpSocket::HttpSocket()$/;"	f	class:HttpSocket
INCSDIR	Makefile	/^INCSDIR = $(PROJDIR)\/include$/;"	m
Info	src/WxLog.cpp	/^void WxLog::Info(std::string parameter)$/;"	f	class:WxLog
LOG_DEBUG	include/WxLog.h	/^		enum{LOG_ERROR,LOG_INFO,LOG_WARN,LOG_DEBUG};$/;"	e	enum:WxLog::__anon1
LOG_ERROR	include/WxLog.h	/^		enum{LOG_ERROR,LOG_INFO,LOG_WARN,LOG_DEBUG};$/;"	e	enum:WxLog::__anon1
LOG_INFO	include/WxLog.h	/^		enum{LOG_ERROR,LOG_INFO,LOG_WARN,LOG_DEBUG};$/;"	e	enum:WxLog::__anon1
LOG_WARN	include/WxLog.h	/^		enum{LOG_ERROR,LOG_INFO,LOG_WARN,LOG_DEBUG};$/;"	e	enum:WxLog::__anon1
Log	src/WxLog.cpp	/^void WxLog::Log(int level,const std::string loginfo)$/;"	f	class:WxLog
NOT_WITHIN	include/sqlite3.h	8316;"	d
OBJSDIR	Makefile	/^OBJSDIR = objs$/;"	m
PARTLY_WITHIN	include/sqlite3.h	8317;"	d
POSTFIELDS	main.cpp	88;"	d	file:
POSTURL	main.cpp	87;"	d	file:
PROJDIR	Makefile	/^PROJDIR = .$/;"	m
SQLITE3_TEXT	include/sqlite3.h	3975;"	d
SQLITE_ABORT	include/sqlite3.h	409;"	d
SQLITE_ABORT_ROLLBACK	include/sqlite3.h	494;"	d
SQLITE_ACCESS_EXISTS	include/sqlite3.h	1256;"	d
SQLITE_ACCESS_READ	include/sqlite3.h	1258;"	d
SQLITE_ACCESS_READWRITE	include/sqlite3.h	1257;"	d
SQLITE_ALTER_TABLE	include/sqlite3.h	2743;"	d
SQLITE_ANALYZE	include/sqlite3.h	2745;"	d
SQLITE_ANY	include/sqlite3.h	4339;"	d
SQLITE_API	include/sqlite3.h	52;"	d
SQLITE_ATTACH	include/sqlite3.h	2741;"	d
SQLITE_AUTH	include/sqlite3.h	428;"	d
SQLITE_AUTH_USER	include/sqlite3.h	508;"	d
SQLITE_BLOB	include/sqlite3.h	3968;"	d
SQLITE_BUSY	include/sqlite3.h	410;"	d
SQLITE_BUSY_RECOVERY	include/sqlite3.h	483;"	d
SQLITE_BUSY_SNAPSHOT	include/sqlite3.h	484;"	d
SQLITE_CANTOPEN	include/sqlite3.h	419;"	d
SQLITE_CANTOPEN_CONVPATH	include/sqlite3.h	488;"	d
SQLITE_CANTOPEN_FULLPATH	include/sqlite3.h	487;"	d
SQLITE_CANTOPEN_ISDIR	include/sqlite3.h	486;"	d
SQLITE_CANTOPEN_NOTEMPDIR	include/sqlite3.h	485;"	d
SQLITE_CDECL	include/sqlite3.h	55;"	d
SQLITE_CHANGESET_ABORT	include/sqlite3.h	9452;"	d
SQLITE_CHANGESET_CONFLICT	include/sqlite3.h	9415;"	d
SQLITE_CHANGESET_CONSTRAINT	include/sqlite3.h	9416;"	d
SQLITE_CHANGESET_DATA	include/sqlite3.h	9413;"	d
SQLITE_CHANGESET_FOREIGN_KEY	include/sqlite3.h	9417;"	d
SQLITE_CHANGESET_NOTFOUND	include/sqlite3.h	9414;"	d
SQLITE_CHANGESET_OMIT	include/sqlite3.h	9450;"	d
SQLITE_CHANGESET_REPLACE	include/sqlite3.h	9451;"	d
SQLITE_CHECKPOINT_FULL	include/sqlite3.h	7730;"	d
SQLITE_CHECKPOINT_PASSIVE	include/sqlite3.h	7729;"	d
SQLITE_CHECKPOINT_RESTART	include/sqlite3.h	7731;"	d
SQLITE_CHECKPOINT_TRUNCATE	include/sqlite3.h	7732;"	d
SQLITE_CONFIG_COVERING_INDEX_SCAN	include/sqlite3.h	1858;"	d
SQLITE_CONFIG_GETMALLOC	include/sqlite3.h	1843;"	d
SQLITE_CONFIG_GETMUTEX	include/sqlite3.h	1849;"	d
SQLITE_CONFIG_GETPCACHE	include/sqlite3.h	1853;"	d
SQLITE_CONFIG_GETPCACHE2	include/sqlite3.h	1857;"	d
SQLITE_CONFIG_HEAP	include/sqlite3.h	1846;"	d
SQLITE_CONFIG_LOG	include/sqlite3.h	1854;"	d
SQLITE_CONFIG_LOOKASIDE	include/sqlite3.h	1851;"	d
SQLITE_CONFIG_MALLOC	include/sqlite3.h	1842;"	d
SQLITE_CONFIG_MEMSTATUS	include/sqlite3.h	1847;"	d
SQLITE_CONFIG_MMAP_SIZE	include/sqlite3.h	1860;"	d
SQLITE_CONFIG_MULTITHREAD	include/sqlite3.h	1840;"	d
SQLITE_CONFIG_MUTEX	include/sqlite3.h	1848;"	d
SQLITE_CONFIG_PAGECACHE	include/sqlite3.h	1845;"	d
SQLITE_CONFIG_PCACHE	include/sqlite3.h	1852;"	d
SQLITE_CONFIG_PCACHE2	include/sqlite3.h	1856;"	d
SQLITE_CONFIG_PCACHE_HDRSZ	include/sqlite3.h	1862;"	d
SQLITE_CONFIG_PMASZ	include/sqlite3.h	1863;"	d
SQLITE_CONFIG_SCRATCH	include/sqlite3.h	1844;"	d
SQLITE_CONFIG_SERIALIZED	include/sqlite3.h	1841;"	d
SQLITE_CONFIG_SINGLETHREAD	include/sqlite3.h	1839;"	d
SQLITE_CONFIG_SQLLOG	include/sqlite3.h	1859;"	d
SQLITE_CONFIG_STMTJRNL_SPILL	include/sqlite3.h	1864;"	d
SQLITE_CONFIG_URI	include/sqlite3.h	1855;"	d
SQLITE_CONFIG_WIN32_HEAPSIZE	include/sqlite3.h	1861;"	d
SQLITE_CONSTRAINT	include/sqlite3.h	424;"	d
SQLITE_CONSTRAINT_CHECK	include/sqlite3.h	495;"	d
SQLITE_CONSTRAINT_COMMITHOOK	include/sqlite3.h	496;"	d
SQLITE_CONSTRAINT_FOREIGNKEY	include/sqlite3.h	497;"	d
SQLITE_CONSTRAINT_FUNCTION	include/sqlite3.h	498;"	d
SQLITE_CONSTRAINT_NOTNULL	include/sqlite3.h	499;"	d
SQLITE_CONSTRAINT_PRIMARYKEY	include/sqlite3.h	500;"	d
SQLITE_CONSTRAINT_ROWID	include/sqlite3.h	504;"	d
SQLITE_CONSTRAINT_TRIGGER	include/sqlite3.h	501;"	d
SQLITE_CONSTRAINT_UNIQUE	include/sqlite3.h	502;"	d
SQLITE_CONSTRAINT_VTAB	include/sqlite3.h	503;"	d
SQLITE_COPY	include/sqlite3.h	2750;"	d
SQLITE_CORRUPT	include/sqlite3.h	416;"	d
SQLITE_CORRUPT_VTAB	include/sqlite3.h	489;"	d
SQLITE_CREATE_INDEX	include/sqlite3.h	2718;"	d
SQLITE_CREATE_TABLE	include/sqlite3.h	2719;"	d
SQLITE_CREATE_TEMP_INDEX	include/sqlite3.h	2720;"	d
SQLITE_CREATE_TEMP_TABLE	include/sqlite3.h	2721;"	d
SQLITE_CREATE_TEMP_TRIGGER	include/sqlite3.h	2722;"	d
SQLITE_CREATE_TEMP_VIEW	include/sqlite3.h	2723;"	d
SQLITE_CREATE_TRIGGER	include/sqlite3.h	2724;"	d
SQLITE_CREATE_VIEW	include/sqlite3.h	2725;"	d
SQLITE_CREATE_VTABLE	include/sqlite3.h	2746;"	d
SQLITE_DBCONFIG_ENABLE_FKEY	include/sqlite3.h	1955;"	d
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	include/sqlite3.h	1957;"	d
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION	include/sqlite3.h	1958;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	include/sqlite3.h	1956;"	d
SQLITE_DBCONFIG_LOOKASIDE	include/sqlite3.h	1954;"	d
SQLITE_DBSTATUS_CACHE_HIT	include/sqlite3.h	6820;"	d
SQLITE_DBSTATUS_CACHE_MISS	include/sqlite3.h	6821;"	d
SQLITE_DBSTATUS_CACHE_USED	include/sqlite3.h	6814;"	d
SQLITE_DBSTATUS_CACHE_WRITE	include/sqlite3.h	6822;"	d
SQLITE_DBSTATUS_DEFERRED_FKS	include/sqlite3.h	6823;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	include/sqlite3.h	6817;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	include/sqlite3.h	6819;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	include/sqlite3.h	6818;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	include/sqlite3.h	6813;"	d
SQLITE_DBSTATUS_MAX	include/sqlite3.h	6824;"	d
SQLITE_DBSTATUS_SCHEMA_USED	include/sqlite3.h	6815;"	d
SQLITE_DBSTATUS_STMT_USED	include/sqlite3.h	6816;"	d
SQLITE_DELETE	include/sqlite3.h	2726;"	d
SQLITE_DENY	include/sqlite3.h	2695;"	d
SQLITE_DEPRECATED	include/sqlite3.h	74;"	d
SQLITE_DETACH	include/sqlite3.h	2742;"	d
SQLITE_DETERMINISTIC	include/sqlite3.h	4350;"	d
SQLITE_DONE	include/sqlite3.h	435;"	d
SQLITE_DROP_INDEX	include/sqlite3.h	2727;"	d
SQLITE_DROP_TABLE	include/sqlite3.h	2728;"	d
SQLITE_DROP_TEMP_INDEX	include/sqlite3.h	2729;"	d
SQLITE_DROP_TEMP_TABLE	include/sqlite3.h	2730;"	d
SQLITE_DROP_TEMP_TRIGGER	include/sqlite3.h	2731;"	d
SQLITE_DROP_TEMP_VIEW	include/sqlite3.h	2732;"	d
SQLITE_DROP_TRIGGER	include/sqlite3.h	2733;"	d
SQLITE_DROP_VIEW	include/sqlite3.h	2734;"	d
SQLITE_DROP_VTABLE	include/sqlite3.h	2747;"	d
SQLITE_EMPTY	include/sqlite3.h	421;"	d
SQLITE_ERROR	include/sqlite3.h	406;"	d
SQLITE_EXPERIMENTAL	include/sqlite3.h	75;"	d
SQLITE_EXTERN	include/sqlite3.h	49;"	d
SQLITE_FAIL	include/sqlite3.h	7817;"	d
SQLITE_FCNTL_BUSYHANDLER	include/sqlite3.h	1006;"	d
SQLITE_FCNTL_CHUNK_SIZE	include/sqlite3.h	997;"	d
SQLITE_FCNTL_COMMIT_PHASETWO	include/sqlite3.h	1012;"	d
SQLITE_FCNTL_FILE_POINTER	include/sqlite3.h	998;"	d
SQLITE_FCNTL_GET_LOCKPROXYFILE	include/sqlite3.h	993;"	d
SQLITE_FCNTL_HAS_MOVED	include/sqlite3.h	1010;"	d
SQLITE_FCNTL_JOURNAL_POINTER	include/sqlite3.h	1018;"	d
SQLITE_FCNTL_LAST_ERRNO	include/sqlite3.h	995;"	d
SQLITE_FCNTL_LOCKSTATE	include/sqlite3.h	992;"	d
SQLITE_FCNTL_MMAP_SIZE	include/sqlite3.h	1008;"	d
SQLITE_FCNTL_OVERWRITE	include/sqlite3.h	1002;"	d
SQLITE_FCNTL_PERSIST_WAL	include/sqlite3.h	1001;"	d
SQLITE_FCNTL_POWERSAFE_OVERWRITE	include/sqlite3.h	1004;"	d
SQLITE_FCNTL_PRAGMA	include/sqlite3.h	1005;"	d
SQLITE_FCNTL_RBU	include/sqlite3.h	1016;"	d
SQLITE_FCNTL_SET_LOCKPROXYFILE	include/sqlite3.h	994;"	d
SQLITE_FCNTL_SIZE_HINT	include/sqlite3.h	996;"	d
SQLITE_FCNTL_SYNC	include/sqlite3.h	1011;"	d
SQLITE_FCNTL_SYNC_OMITTED	include/sqlite3.h	999;"	d
SQLITE_FCNTL_TEMPFILENAME	include/sqlite3.h	1007;"	d
SQLITE_FCNTL_TRACE	include/sqlite3.h	1009;"	d
SQLITE_FCNTL_VFSNAME	include/sqlite3.h	1003;"	d
SQLITE_FCNTL_VFS_POINTER	include/sqlite3.h	1017;"	d
SQLITE_FCNTL_WAL_BLOCK	include/sqlite3.h	1014;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	include/sqlite3.h	1000;"	d
SQLITE_FCNTL_WIN32_SET_HANDLE	include/sqlite3.h	1013;"	d
SQLITE_FCNTL_ZIPVFS	include/sqlite3.h	1015;"	d
SQLITE_FLOAT	include/sqlite3.h	3967;"	d
SQLITE_FORMAT	include/sqlite3.h	429;"	d
SQLITE_FULL	include/sqlite3.h	418;"	d
SQLITE_FUNCTION	include/sqlite3.h	2748;"	d
SQLITE_GET_LOCKPROXYFILE	include/sqlite3.h	1021;"	d
SQLITE_IGNORE	include/sqlite3.h	2696;"	d
SQLITE_INDEX_CONSTRAINT_EQ	include/sqlite3.h	5808;"	d
SQLITE_INDEX_CONSTRAINT_GE	include/sqlite3.h	5812;"	d
SQLITE_INDEX_CONSTRAINT_GLOB	include/sqlite3.h	5815;"	d
SQLITE_INDEX_CONSTRAINT_GT	include/sqlite3.h	5809;"	d
SQLITE_INDEX_CONSTRAINT_LE	include/sqlite3.h	5810;"	d
SQLITE_INDEX_CONSTRAINT_LIKE	include/sqlite3.h	5814;"	d
SQLITE_INDEX_CONSTRAINT_LT	include/sqlite3.h	5811;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	include/sqlite3.h	5813;"	d
SQLITE_INDEX_CONSTRAINT_REGEXP	include/sqlite3.h	5816;"	d
SQLITE_INDEX_SCAN_UNIQUE	include/sqlite3.h	5798;"	d
SQLITE_INSERT	include/sqlite3.h	2735;"	d
SQLITE_INTEGER	include/sqlite3.h	3966;"	d
SQLITE_INTERNAL	include/sqlite3.h	407;"	d
SQLITE_INTERRUPT	include/sqlite3.h	414;"	d
SQLITE_IOCAP_ATOMIC	include/sqlite3.h	568;"	d
SQLITE_IOCAP_ATOMIC16K	include/sqlite3.h	574;"	d
SQLITE_IOCAP_ATOMIC1K	include/sqlite3.h	570;"	d
SQLITE_IOCAP_ATOMIC2K	include/sqlite3.h	571;"	d
SQLITE_IOCAP_ATOMIC32K	include/sqlite3.h	575;"	d
SQLITE_IOCAP_ATOMIC4K	include/sqlite3.h	572;"	d
SQLITE_IOCAP_ATOMIC512	include/sqlite3.h	569;"	d
SQLITE_IOCAP_ATOMIC64K	include/sqlite3.h	576;"	d
SQLITE_IOCAP_ATOMIC8K	include/sqlite3.h	573;"	d
SQLITE_IOCAP_IMMUTABLE	include/sqlite3.h	581;"	d
SQLITE_IOCAP_POWERSAFE_OVERWRITE	include/sqlite3.h	580;"	d
SQLITE_IOCAP_SAFE_APPEND	include/sqlite3.h	577;"	d
SQLITE_IOCAP_SEQUENTIAL	include/sqlite3.h	578;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	include/sqlite3.h	579;"	d
SQLITE_IOERR	include/sqlite3.h	415;"	d
SQLITE_IOERR_ACCESS	include/sqlite3.h	466;"	d
SQLITE_IOERR_AUTH	include/sqlite3.h	481;"	d
SQLITE_IOERR_BLOCKED	include/sqlite3.h	464;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	include/sqlite3.h	467;"	d
SQLITE_IOERR_CLOSE	include/sqlite3.h	469;"	d
SQLITE_IOERR_CONVPATH	include/sqlite3.h	479;"	d
SQLITE_IOERR_DELETE	include/sqlite3.h	463;"	d
SQLITE_IOERR_DELETE_NOENT	include/sqlite3.h	476;"	d
SQLITE_IOERR_DIR_CLOSE	include/sqlite3.h	470;"	d
SQLITE_IOERR_DIR_FSYNC	include/sqlite3.h	458;"	d
SQLITE_IOERR_FSTAT	include/sqlite3.h	460;"	d
SQLITE_IOERR_FSYNC	include/sqlite3.h	457;"	d
SQLITE_IOERR_GETTEMPPATH	include/sqlite3.h	478;"	d
SQLITE_IOERR_LOCK	include/sqlite3.h	468;"	d
SQLITE_IOERR_MMAP	include/sqlite3.h	477;"	d
SQLITE_IOERR_NOMEM	include/sqlite3.h	465;"	d
SQLITE_IOERR_RDLOCK	include/sqlite3.h	462;"	d
SQLITE_IOERR_READ	include/sqlite3.h	454;"	d
SQLITE_IOERR_SEEK	include/sqlite3.h	475;"	d
SQLITE_IOERR_SHMLOCK	include/sqlite3.h	473;"	d
SQLITE_IOERR_SHMMAP	include/sqlite3.h	474;"	d
SQLITE_IOERR_SHMOPEN	include/sqlite3.h	471;"	d
SQLITE_IOERR_SHMSIZE	include/sqlite3.h	472;"	d
SQLITE_IOERR_SHORT_READ	include/sqlite3.h	455;"	d
SQLITE_IOERR_TRUNCATE	include/sqlite3.h	459;"	d
SQLITE_IOERR_UNLOCK	include/sqlite3.h	461;"	d
SQLITE_IOERR_VNODE	include/sqlite3.h	480;"	d
SQLITE_IOERR_WRITE	include/sqlite3.h	456;"	d
SQLITE_LAST_ERRNO	include/sqlite3.h	1023;"	d
SQLITE_LIMIT_ATTACHED	include/sqlite3.h	3284;"	d
SQLITE_LIMIT_COLUMN	include/sqlite3.h	3279;"	d
SQLITE_LIMIT_COMPOUND_SELECT	include/sqlite3.h	3281;"	d
SQLITE_LIMIT_EXPR_DEPTH	include/sqlite3.h	3280;"	d
SQLITE_LIMIT_FUNCTION_ARG	include/sqlite3.h	3283;"	d
SQLITE_LIMIT_LENGTH	include/sqlite3.h	3277;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	include/sqlite3.h	3285;"	d
SQLITE_LIMIT_SQL_LENGTH	include/sqlite3.h	3278;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	include/sqlite3.h	3287;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	include/sqlite3.h	3286;"	d
SQLITE_LIMIT_VDBE_OP	include/sqlite3.h	3282;"	d
SQLITE_LIMIT_WORKER_THREADS	include/sqlite3.h	3288;"	d
SQLITE_LOCKED	include/sqlite3.h	411;"	d
SQLITE_LOCKED_SHAREDCACHE	include/sqlite3.h	482;"	d
SQLITE_LOCK_EXCLUSIVE	include/sqlite3.h	594;"	d
SQLITE_LOCK_NONE	include/sqlite3.h	590;"	d
SQLITE_LOCK_PENDING	include/sqlite3.h	593;"	d
SQLITE_LOCK_RESERVED	include/sqlite3.h	592;"	d
SQLITE_LOCK_SHARED	include/sqlite3.h	591;"	d
SQLITE_MISMATCH	include/sqlite3.h	425;"	d
SQLITE_MISUSE	include/sqlite3.h	426;"	d
SQLITE_MUTEX_FAST	include/sqlite3.h	6451;"	d
SQLITE_MUTEX_RECURSIVE	include/sqlite3.h	6452;"	d
SQLITE_MUTEX_STATIC_APP1	include/sqlite3.h	6461;"	d
SQLITE_MUTEX_STATIC_APP2	include/sqlite3.h	6462;"	d
SQLITE_MUTEX_STATIC_APP3	include/sqlite3.h	6463;"	d
SQLITE_MUTEX_STATIC_LRU	include/sqlite3.h	6458;"	d
SQLITE_MUTEX_STATIC_LRU2	include/sqlite3.h	6459;"	d
SQLITE_MUTEX_STATIC_MASTER	include/sqlite3.h	6453;"	d
SQLITE_MUTEX_STATIC_MEM	include/sqlite3.h	6454;"	d
SQLITE_MUTEX_STATIC_MEM2	include/sqlite3.h	6455;"	d
SQLITE_MUTEX_STATIC_OPEN	include/sqlite3.h	6456;"	d
SQLITE_MUTEX_STATIC_PMEM	include/sqlite3.h	6460;"	d
SQLITE_MUTEX_STATIC_PRNG	include/sqlite3.h	6457;"	d
SQLITE_MUTEX_STATIC_VFS1	include/sqlite3.h	6464;"	d
SQLITE_MUTEX_STATIC_VFS2	include/sqlite3.h	6465;"	d
SQLITE_MUTEX_STATIC_VFS3	include/sqlite3.h	6466;"	d
SQLITE_NOLFS	include/sqlite3.h	427;"	d
SQLITE_NOMEM	include/sqlite3.h	412;"	d
SQLITE_NOTADB	include/sqlite3.h	431;"	d
SQLITE_NOTFOUND	include/sqlite3.h	417;"	d
SQLITE_NOTICE	include/sqlite3.h	432;"	d
SQLITE_NOTICE_RECOVER_ROLLBACK	include/sqlite3.h	506;"	d
SQLITE_NOTICE_RECOVER_WAL	include/sqlite3.h	505;"	d
SQLITE_NULL	include/sqlite3.h	3969;"	d
SQLITE_OK	include/sqlite3.h	404;"	d
SQLITE_OPEN_AUTOPROXY	include/sqlite3.h	522;"	d
SQLITE_OPEN_CREATE	include/sqlite3.h	519;"	d
SQLITE_OPEN_DELETEONCLOSE	include/sqlite3.h	520;"	d
SQLITE_OPEN_EXCLUSIVE	include/sqlite3.h	521;"	d
SQLITE_OPEN_FULLMUTEX	include/sqlite3.h	533;"	d
SQLITE_OPEN_MAIN_DB	include/sqlite3.h	525;"	d
SQLITE_OPEN_MAIN_JOURNAL	include/sqlite3.h	528;"	d
SQLITE_OPEN_MASTER_JOURNAL	include/sqlite3.h	531;"	d
SQLITE_OPEN_MEMORY	include/sqlite3.h	524;"	d
SQLITE_OPEN_NOMUTEX	include/sqlite3.h	532;"	d
SQLITE_OPEN_PRIVATECACHE	include/sqlite3.h	535;"	d
SQLITE_OPEN_READONLY	include/sqlite3.h	517;"	d
SQLITE_OPEN_READWRITE	include/sqlite3.h	518;"	d
SQLITE_OPEN_SHAREDCACHE	include/sqlite3.h	534;"	d
SQLITE_OPEN_SUBJOURNAL	include/sqlite3.h	530;"	d
SQLITE_OPEN_TEMP_DB	include/sqlite3.h	526;"	d
SQLITE_OPEN_TEMP_JOURNAL	include/sqlite3.h	529;"	d
SQLITE_OPEN_TRANSIENT_DB	include/sqlite3.h	527;"	d
SQLITE_OPEN_URI	include/sqlite3.h	523;"	d
SQLITE_OPEN_WAL	include/sqlite3.h	536;"	d
SQLITE_PERM	include/sqlite3.h	408;"	d
SQLITE_PRAGMA	include/sqlite3.h	2736;"	d
SQLITE_PROTOCOL	include/sqlite3.h	420;"	d
SQLITE_RANGE	include/sqlite3.h	430;"	d
SQLITE_READ	include/sqlite3.h	2737;"	d
SQLITE_READONLY	include/sqlite3.h	413;"	d
SQLITE_READONLY_CANTLOCK	include/sqlite3.h	491;"	d
SQLITE_READONLY_DBMOVED	include/sqlite3.h	493;"	d
SQLITE_READONLY_RECOVERY	include/sqlite3.h	490;"	d
SQLITE_READONLY_ROLLBACK	include/sqlite3.h	492;"	d
SQLITE_RECURSIVE	include/sqlite3.h	2751;"	d
SQLITE_REINDEX	include/sqlite3.h	2744;"	d
SQLITE_REPLACE	include/sqlite3.h	7819;"	d
SQLITE_ROLLBACK	include/sqlite3.h	7815;"	d
SQLITE_ROW	include/sqlite3.h	434;"	d
SQLITE_SAVEPOINT	include/sqlite3.h	2749;"	d
SQLITE_SCANSTAT_EST	include/sqlite3.h	7870;"	d
SQLITE_SCANSTAT_EXPLAIN	include/sqlite3.h	7872;"	d
SQLITE_SCANSTAT_NAME	include/sqlite3.h	7871;"	d
SQLITE_SCANSTAT_NLOOP	include/sqlite3.h	7868;"	d
SQLITE_SCANSTAT_NVISIT	include/sqlite3.h	7869;"	d
SQLITE_SCANSTAT_SELECTID	include/sqlite3.h	7873;"	d
SQLITE_SCHEMA	include/sqlite3.h	422;"	d
SQLITE_SELECT	include/sqlite3.h	2738;"	d
SQLITE_SET_LOCKPROXYFILE	include/sqlite3.h	1022;"	d
SQLITE_SHM_EXCLUSIVE	include/sqlite3.h	1285;"	d
SQLITE_SHM_LOCK	include/sqlite3.h	1283;"	d
SQLITE_SHM_NLOCK	include/sqlite3.h	1295;"	d
SQLITE_SHM_SHARED	include/sqlite3.h	1284;"	d
SQLITE_SHM_UNLOCK	include/sqlite3.h	1282;"	d
SQLITE_SOURCE_ID	include/sqlite3.h	116;"	d
SQLITE_STATIC	include/sqlite3.h	4606;"	d
SQLITE_STATUS_MALLOC_COUNT	include/sqlite3.h	6696;"	d
SQLITE_STATUS_MALLOC_SIZE	include/sqlite3.h	6692;"	d
SQLITE_STATUS_MEMORY_USED	include/sqlite3.h	6687;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	include/sqlite3.h	6689;"	d
SQLITE_STATUS_PAGECACHE_SIZE	include/sqlite3.h	6694;"	d
SQLITE_STATUS_PAGECACHE_USED	include/sqlite3.h	6688;"	d
SQLITE_STATUS_PARSER_STACK	include/sqlite3.h	6693;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	include/sqlite3.h	6691;"	d
SQLITE_STATUS_SCRATCH_SIZE	include/sqlite3.h	6695;"	d
SQLITE_STATUS_SCRATCH_USED	include/sqlite3.h	6690;"	d
SQLITE_STDCALL	include/sqlite3.h	58;"	d
SQLITE_STMTSTATUS_AUTOINDEX	include/sqlite3.h	6892;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	include/sqlite3.h	6890;"	d
SQLITE_STMTSTATUS_SORT	include/sqlite3.h	6891;"	d
SQLITE_STMTSTATUS_VM_STEP	include/sqlite3.h	6893;"	d
SQLITE_SYNC_DATAONLY	include/sqlite3.h	624;"	d
SQLITE_SYNC_FULL	include/sqlite3.h	623;"	d
SQLITE_SYNC_NORMAL	include/sqlite3.h	622;"	d
SQLITE_TESTCTRL_ALWAYS	include/sqlite3.h	6554;"	d
SQLITE_TESTCTRL_ASSERT	include/sqlite3.h	6553;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	include/sqlite3.h	6551;"	d
SQLITE_TESTCTRL_BITVEC_TEST	include/sqlite3.h	6549;"	d
SQLITE_TESTCTRL_BYTEORDER	include/sqlite3.h	6563;"	d
SQLITE_TESTCTRL_EXPLAIN_STMT	include/sqlite3.h	6560;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	include/sqlite3.h	6550;"	d
SQLITE_TESTCTRL_FIRST	include/sqlite3.h	6545;"	d
SQLITE_TESTCTRL_IMPOSTER	include/sqlite3.h	6566;"	d
SQLITE_TESTCTRL_ISINIT	include/sqlite3.h	6564;"	d
SQLITE_TESTCTRL_ISKEYWORD	include/sqlite3.h	6557;"	d
SQLITE_TESTCTRL_LAST	include/sqlite3.h	6567;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	include/sqlite3.h	6559;"	d
SQLITE_TESTCTRL_NEVER_CORRUPT	include/sqlite3.h	6561;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	include/sqlite3.h	6556;"	d
SQLITE_TESTCTRL_PENDING_BYTE	include/sqlite3.h	6552;"	d
SQLITE_TESTCTRL_PRNG_RESET	include/sqlite3.h	6548;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	include/sqlite3.h	6547;"	d
SQLITE_TESTCTRL_PRNG_SAVE	include/sqlite3.h	6546;"	d
SQLITE_TESTCTRL_RESERVE	include/sqlite3.h	6555;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	include/sqlite3.h	6558;"	d
SQLITE_TESTCTRL_SORTER_MMAP	include/sqlite3.h	6565;"	d
SQLITE_TESTCTRL_VDBE_COVERAGE	include/sqlite3.h	6562;"	d
SQLITE_TEXT	include/sqlite3.h	3971;"	d
SQLITE_TEXT	include/sqlite3.h	3973;"	d
SQLITE_TOOBIG	include/sqlite3.h	423;"	d
SQLITE_TRANSACTION	include/sqlite3.h	2739;"	d
SQLITE_TRANSIENT	include/sqlite3.h	4607;"	d
SQLITE_UPDATE	include/sqlite3.h	2740;"	d
SQLITE_UTF16	include/sqlite3.h	4338;"	d
SQLITE_UTF16BE	include/sqlite3.h	4337;"	d
SQLITE_UTF16LE	include/sqlite3.h	4336;"	d
SQLITE_UTF16_ALIGNED	include/sqlite3.h	4340;"	d
SQLITE_UTF8	include/sqlite3.h	4335;"	d
SQLITE_VERSION	include/sqlite3.h	114;"	d
SQLITE_VERSION	include/sqlite3.h	81;"	d
SQLITE_VERSION_NUMBER	include/sqlite3.h	115;"	d
SQLITE_VERSION_NUMBER	include/sqlite3.h	84;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	include/sqlite3.h	7789;"	d
SQLITE_WARNING	include/sqlite3.h	433;"	d
SQLITE_WARNING_AUTOINDEX	include/sqlite3.h	507;"	d
SRCDIR	Makefile	/^SRCDIR  = src$/;"	m
StartHttpSocket	src/HttpSocket.cpp	/^void HttpSocket::StartHttpSocket()$/;"	f	class:HttpSocket
WX_V2	include/HttpSocket.h	/^		static bool WX_V2;$/;"	m	class:HttpSocket
WebWxSendMsg	src/WxSendMessage.cpp	/^bool WxSendMessage::WebWxSendMsg(std::string content,std::string toUserName)$/;"	f	class:WxSendMessage
WxInitMessage	include/WxInitMessage.h	/^class WxInitMessage$/;"	c
WxInitMessage	src/WxInitMessage.cpp	/^WxInitMessage::WxInitMessage()$/;"	f	class:WxInitMessage
WxLog	include/WxLog.h	/^class WxLog{$/;"	c
WxLog	src/WxLog.cpp	/^WxLog::WxLog()$/;"	f	class:WxLog
WxRecvMessage	include/WxRecvMessage.h	/^class WxRecvMessage{$/;"	c
WxRecvMessage	src/WxRecvMessage.cpp	/^WxRecvMessage::WxRecvMessage()$/;"	f	class:WxRecvMessage
WxSendMessage	include/WxSendMessage.h	/^class WxSendMessage{$/;"	c
WxSendMessage	src/WxSendMessage.cpp	/^WxSendMessage::WxSendMessage()$/;"	f	class:WxSendMessage
WxSendMessageStart	src/WxSendMessage.cpp	/^void WxSendMessage::WxSendMessageStart()$/;"	f	class:WxSendMessage
WxSqlite	include/WxSqlite.h	/^class WxSqlite{$/;"	c
WxSqlite	src/WxSqlite.cpp	/^WxSqlite::WxSqlite()$/;"	f	class:WxSqlite
_FTS5_H	include/sqlite3.h	9629;"	d
_HttpSocket_H_	include/HttpSocket.h	2;"	d
_SQLITE3RTREE_H_	include/sqlite3.h	8224;"	d
_SQLITE3_H_	include/sqlite3.h	34;"	d
_WXINITMESSAGE_H_	include/WxInitMessage.h	2;"	d
_WXLOG_H_	include/WxLog.h	2;"	d
_WXRECVMESSAGE_H_	include/WxRecvMessage.h	2;"	d
_WXSENDMESSAGE_H_	include/WxSendMessage.h	2;"	d
_WXSQLITE_H_	include/WxSqlite.h	2;"	d
__SQLITESESSION_H_	include/sqlite3.h	8331;"	d
a	include/sqlite3.h	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
aConstraint	include/sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraintUsage	include/sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aCoord	include/sqlite3.h	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info
aOrderBy	include/sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aParam	include/sqlite3.h	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
aParam	include/sqlite3.h	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
anQueue	include/sqlite3.h	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info
apSqlParam	include/sqlite3.h	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
argvIndex	include/sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
b	include/sqlite3.h	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
cJSON	include/cJSON.h	/^typedef struct cJSON {$/;"	s
cJSON	include/cJSON.h	/^} cJSON;$/;"	t	typeref:struct:cJSON
cJSON_AddBoolToObject	include/cJSON.h	130;"	d
cJSON_AddFalseToObject	include/cJSON.h	129;"	d
cJSON_AddItemReferenceToArray	src/cjson.cpp	/^void	cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)						{cJSON_AddItemToArray(array,create_reference(item));}$/;"	f
cJSON_AddItemReferenceToObject	src/cjson.cpp	/^void	cJSON_AddItemReferenceToObject(cJSON *object,const char *string,cJSON *item)	{cJSON_AddItemToObject(object,string,create_reference(item));}$/;"	f
cJSON_AddItemToArray	src/cjson.cpp	/^void   cJSON_AddItemToArray(cJSON *array, cJSON *item)						{cJSON *c=array->child;if (!item) return; if (!c) {array->child=item;} else {while (c && c->next) c=c->next; suffix_object(c,item);}}$/;"	f
cJSON_AddItemToObject	src/cjson.cpp	/^void   cJSON_AddItemToObject(cJSON *object,const char *string,cJSON *item)	{if (!item) return; if (item->string) cJSON_free(item->string);item->string=cJSON_strdup(string);cJSON_AddItemToArray(object,item);}$/;"	f
cJSON_AddNullToObject	include/cJSON.h	127;"	d
cJSON_AddNumberToObject	include/cJSON.h	131;"	d
cJSON_AddStringToObject	include/cJSON.h	132;"	d
cJSON_AddTrueToObject	include/cJSON.h	128;"	d
cJSON_Array	include/cJSON.h	37;"	d
cJSON_CreateArray	src/cjson.cpp	/^cJSON *cJSON_CreateArray(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Array;return item;}$/;"	f
cJSON_CreateBool	src/cjson.cpp	/^cJSON *cJSON_CreateBool(int b)					{cJSON *item=cJSON_New_Item();if(item)item->type=b?cJSON_True:cJSON_False;return item;}$/;"	f
cJSON_CreateDoubleArray	src/cjson.cpp	/^cJSON *cJSON_CreateDoubleArray(double *numbers,int count)		{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateFalse	src/cjson.cpp	/^cJSON *cJSON_CreateFalse(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_False;return item;}$/;"	f
cJSON_CreateFloatArray	src/cjson.cpp	/^cJSON *cJSON_CreateFloatArray(float *numbers,int count)			{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateIntArray	src/cjson.cpp	/^cJSON *cJSON_CreateIntArray(int *numbers,int count)				{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateNull	src/cjson.cpp	/^cJSON *cJSON_CreateNull(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_NULL;return item;}$/;"	f
cJSON_CreateNumber	src/cjson.cpp	/^cJSON *cJSON_CreateNumber(double num)			{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_Number;item->valuedouble=num;item->valueint=(int)num;}return item;}$/;"	f
cJSON_CreateObject	src/cjson.cpp	/^cJSON *cJSON_CreateObject(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Object;return item;}$/;"	f
cJSON_CreateString	src/cjson.cpp	/^cJSON *cJSON_CreateString(const char *string)	{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_String;item->valuestring=cJSON_strdup(string);}return item;}$/;"	f
cJSON_CreateStringArray	src/cjson.cpp	/^cJSON *cJSON_CreateStringArray(const char **strings,int count)	{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateString(strings[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateTrue	src/cjson.cpp	/^cJSON *cJSON_CreateTrue(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_True;return item;}$/;"	f
cJSON_Delete	src/cjson.cpp	/^void cJSON_Delete(cJSON *c)$/;"	f
cJSON_DeleteItemFromArray	src/cjson.cpp	/^void   cJSON_DeleteItemFromArray(cJSON *array,int which)			{cJSON_Delete(cJSON_DetachItemFromArray(array,which));}$/;"	f
cJSON_DeleteItemFromObject	src/cjson.cpp	/^void   cJSON_DeleteItemFromObject(cJSON *object,const char *string) {cJSON_Delete(cJSON_DetachItemFromObject(object,string));}$/;"	f
cJSON_DetachItemFromArray	src/cjson.cpp	/^cJSON *cJSON_DetachItemFromArray(cJSON *array,int which)			{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return 0;$/;"	f
cJSON_DetachItemFromObject	src/cjson.cpp	/^cJSON *cJSON_DetachItemFromObject(cJSON *object,const char *string) {int i=0;cJSON *c=object->child;while (c && cJSON_strcasecmp(c->string,string)) i++,c=c->next;if (c) return cJSON_DetachItemFromArray(object,i);return 0;}$/;"	f
cJSON_Duplicate	src/cjson.cpp	/^cJSON *cJSON_Duplicate(cJSON *item,int recurse)$/;"	f
cJSON_False	include/cJSON.h	32;"	d
cJSON_GetArrayItem	src/cjson.cpp	/^cJSON *cJSON_GetArrayItem(cJSON *array,int item)				{cJSON *c=array->child;  while (c && item>0) item--,c=c->next; return c;}$/;"	f
cJSON_GetArraySize	src/cjson.cpp	/^int    cJSON_GetArraySize(cJSON *array)							{cJSON *c=array->child;int i=0;while(c)i++,c=c->next;return i;}$/;"	f
cJSON_GetErrorPtr	src/cjson.cpp	/^const char *cJSON_GetErrorPtr(void) {return ep;}$/;"	f
cJSON_GetObjectItem	src/cjson.cpp	/^cJSON *cJSON_GetObjectItem(cJSON *object,const char *string)	{cJSON *c=object->child; while (c && cJSON_strcasecmp(c->string,string)) c=c->next; return c;}$/;"	f
cJSON_Hooks	include/cJSON.h	/^typedef struct cJSON_Hooks {$/;"	s
cJSON_Hooks	include/cJSON.h	/^} cJSON_Hooks;$/;"	t	typeref:struct:cJSON_Hooks
cJSON_InitHooks	src/cjson.cpp	/^void cJSON_InitHooks(cJSON_Hooks* hooks)$/;"	f
cJSON_IsReference	include/cJSON.h	40;"	d
cJSON_NULL	include/cJSON.h	34;"	d
cJSON_New_Item	src/cjson.cpp	/^static cJSON *cJSON_New_Item(void)$/;"	f	file:
cJSON_Number	include/cJSON.h	35;"	d
cJSON_Object	include/cJSON.h	38;"	d
cJSON_Parse	src/cjson.cpp	/^cJSON *cJSON_Parse(const char *value) {return cJSON_ParseWithOpts(value,0,0);}$/;"	f
cJSON_ParseWithOpts	src/cjson.cpp	/^cJSON *cJSON_ParseWithOpts(const char *value,const char **return_parse_end,int require_null_terminated)$/;"	f
cJSON_Print	src/cjson.cpp	/^char *cJSON_Print(cJSON *item)				{return print_value(item,0,1);}$/;"	f
cJSON_PrintUnformatted	src/cjson.cpp	/^char *cJSON_PrintUnformatted(cJSON *item)	{return print_value(item,0,0);}$/;"	f
cJSON_ReplaceItemInArray	src/cjson.cpp	/^void   cJSON_ReplaceItemInArray(cJSON *array,int which,cJSON *newitem)		{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return;$/;"	f
cJSON_ReplaceItemInObject	src/cjson.cpp	/^void   cJSON_ReplaceItemInObject(cJSON *object,const char *string,cJSON *newitem){int i=0;cJSON *c=object->child;while(c && cJSON_strcasecmp(c->string,string))i++,c=c->next;if(c){newitem->string=cJSON_strdup(string);cJSON_ReplaceItemInArray(object,i,newitem);}}$/;"	f
cJSON_SetIntValue	include/cJSON.h	135;"	d
cJSON_String	include/cJSON.h	36;"	d
cJSON_True	include/cJSON.h	33;"	d
cJSON__h	include/cJSON.h	24;"	d
cJSON_free	src/cjson.cpp	/^static void (*cJSON_free)(void *ptr) = free;$/;"	v	file:
cJSON_malloc	src/cjson.cpp	/^static void *(*cJSON_malloc)(size_t sz) = malloc;$/;"	v	file:
cJSON_strcasecmp	src/cjson.cpp	/^static int cJSON_strcasecmp(const char *s1,const char *s2)$/;"	f	file:
cJSON_strdup	src/cjson.cpp	/^static char* cJSON_strdup(const char* str)$/;"	f	file:
callback	src/WxSqlite.cpp	/^int callback( void * para, int n_column, char ** column_value, char ** column_name )$/;"	f
child	include/cJSON.h	/^	struct cJSON *child;		\/* An array or object item will have a child pointer pointing to a chain of the items in the array\/object. *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
code	include/HttpSocket.h	/^		std::string code , uuid;$/;"	m	class:HttpSocket
colUsed	include/sqlite3.h	/^  sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info
create_reference	src/cjson.cpp	/^static cJSON *create_reference(cJSON *item) {cJSON *ref=cJSON_New_Item();if (!ref) return 0;memcpy(ref,item,sizeof(cJSON));ref->string=0;ref->type|=cJSON_IsReference;ref->next=ref->prev=0;return ref;}$/;"	f	file:
desc	include/sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
deteleSql	include/WxSqlite.h	/^		const char *deteleSql;$/;"	m	class:WxSqlite
deviceId	include/WxInitMessage.h	/^		std::string deviceId;$/;"	m	class:WxInitMessage
double	include/sqlite3.h	268;"	d
double	include/sqlite3.h	8201;"	d
eParentWithin	include/sqlite3.h	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
eWithin	include/sqlite3.h	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info
ep	src/cjson.cpp	/^static const char *ep;$/;"	v	file:
errmsg	include/WxSqlite.h	/^		char *errmsg ;$/;"	m	class:WxSqlite
estimatedCost	include/sqlite3.h	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
estimatedRows	include/sqlite3.h	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info
firstByteMark	src/cjson.cpp	/^static const unsigned char firstByteMark[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };$/;"	v	file:
flag	src/WxRecvMessage.cpp	/^static int flag = 0;$/;"	v	file:
free_fn	include/cJSON.h	/^      void (*free_fn)(void *ptr);$/;"	m	struct:cJSON_Hooks
fts5_api	include/sqlite3.h	/^struct fts5_api {$/;"	s
fts5_api	include/sqlite3.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_extension_function	include/sqlite3.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_tokenizer	include/sqlite3.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	include/sqlite3.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
getDeviceId	src/WxInitMessage.cpp	/^std::string WxInitMessage::getDeviceId()$/;"	f	class:WxInitMessage
getInstance	src/HttpSocket.cpp	/^HttpSocket *HttpSocket::getInstance()$/;"	f	class:HttpSocket
getInstance	src/WxInitMessage.cpp	/^WxInitMessage *WxInitMessage::getInstance()$/;"	f	class:WxInitMessage
getInstance	src/WxLog.cpp	/^WxLog * WxLog::getInstance()$/;"	f	class:WxLog
getInstance	src/WxSqlite.cpp	/^WxSqlite *WxSqlite::getInstance()$/;"	f	class:WxSqlite
getMessage	src/WxRecvMessage.cpp	/^void * getMessage(void *arg)$/;"	f
getNameById	src/WxRecvMessage.cpp	/^bool WxRecvMessage::getNameById(std::string id)$/;"	f	class:WxRecvMessage
hSocket	include/HttpSocket.h	/^		static HttpSocket * hSocket;$/;"	m	class:HttpSocket
hSocket	src/HttpSocket.cpp	/^HttpSocket *HttpSocket::hSocket = NULL;$/;"	m	class:HttpSocket	file:
httpSocket	include/HttpSocket.h	/^		HttpSocket *httpSocket;$/;"	m	class:HttpSocket
iColumn	include/sqlite3.h	/^     int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iColumn	include/sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iLevel	include/sqlite3.h	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iRowid	include/sqlite3.h	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iTermOffset	include/sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iVersion	include/sqlite3.h	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	include/sqlite3.h	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	include/sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	include/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	include/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
iVersion	include/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2
idxFlags	include/sqlite3.h	/^  int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info
idxNum	include/sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxStr	include/sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
insertUserInfo	src/WxSqlite.cpp	/^bool WxSqlite::insertUserInfo(std::string UserName,std::string NickName,std::string RemarkName)$/;"	f	class:WxSqlite
logHandle	include/WxLog.h	/^		int logHandle;$/;"	m	class:WxLog
logPath	include/WxLog.h	/^		char logPath[100];$/;"	m	class:WxLog
logfile	include/WxLog.h	/^		char logfile[100];$/;"	m	class:WxLog
main	main.cpp	/^int main(int argc, char *argv[]) {  $/;"	f
main	src/main.cpp	/^int main(int argc,char **argv)$/;"	f
malloc_fn	include/cJSON.h	/^      void *(*malloc_fn)(size_t sz);$/;"	m	struct:cJSON_Hooks
msgId	include/WxRecvMessage.h	/^		std::string msgId;$/;"	m	class:WxRecvMessage
mxLevel	include/sqlite3.h	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info
mxPathname	include/sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
nConstraint	include/sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nCoord	include/sqlite3.h	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info
nOrderBy	include/sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nParam	include/sqlite3.h	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
nParam	include/sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nRef	include/sqlite3.h	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab
needToFreeIdxStr	include/sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
next	include/cJSON.h	/^	struct cJSON *next,*prev;	\/* next\/prev allow you to walk array\/object chains. Alternatively, use GetArraySize\/GetArrayItem\/GetObjectItem *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
nickName	include/WxRecvMessage.h	/^		std::string nickName;$/;"	m	class:WxRecvMessage
omit	include/sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
op	include/sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
orderByConsumed	include/sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
pAppData	include/sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	include/sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pArg	include/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pArg	include/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2
pBuf	include/sqlite3.h	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page
pContext	include/sqlite3.h	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info
pContext	include/sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pExtra	include/sqlite3.h	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page
pMethods	include/sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pModule	include/sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pNext	include/sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pUser	include/sqlite3.h	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info
pUser	include/sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pVtab	include/sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
parseGetContact	src/WxInitMessage.cpp	/^bool WxInitMessage::parseGetContact(const char *pMsg)$/;"	f	class:WxInitMessage
parseJson	src/WxInitMessage.cpp	/^bool WxInitMessage::parseJson(const char *pMsg)$/;"	f	class:WxInitMessage
parseJson	src/WxRecvMessage.cpp	/^bool WxRecvMessage::parseJson(const char *pMsg)$/;"	f	class:WxRecvMessage
parseName	src/WxRecvMessage.cpp	/^bool WxRecvMessage::parseName(const char *pMsg)$/;"	f	class:WxRecvMessage
parse_array	src/cjson.cpp	/^static const char *parse_array(cJSON *item,const char *value)$/;"	f	file:
parse_number	src/cjson.cpp	/^static const char *parse_number(cJSON *item,const char *num)$/;"	f	file:
parse_object	src/cjson.cpp	/^static const char *parse_object(cJSON *item,const char *value)$/;"	f	file:
parse_string	src/cjson.cpp	/^static const char *parse_string(cJSON *item,const char *str)$/;"	f	file:
parse_value	src/cjson.cpp	/^static const char *parse_value(cJSON *item,const char *value)$/;"	f	file:
pass_ticket	include/HttpSocket.h	/^		std::string pass_ticket;$/;"	m	class:HttpSocket
prev	include/cJSON.h	/^	struct cJSON *next,*prev;	\/* next\/prev allow you to walk array\/object chains. Alternatively, use GetArraySize\/GetArrayItem\/GetObjectItem *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::
print_array	src/cjson.cpp	/^static char *print_array(cJSON *item,int depth,int fmt)$/;"	f	file:
print_number	src/cjson.cpp	/^static char *print_number(cJSON *item)$/;"	f	file:
print_object	src/cjson.cpp	/^static char *print_object(cJSON *item,int depth,int fmt)$/;"	f	file:
print_string	src/cjson.cpp	/^static char *print_string(cJSON *item)	{return print_string_ptr(item->valuestring);}$/;"	f	file:
print_string_ptr	src/cjson.cpp	/^static char *print_string_ptr(const char *str)$/;"	f	file:
print_value	src/cjson.cpp	/^static char *print_value(cJSON *item,int depth,int fmt)$/;"	f	file:
processHtml	src/HttpSocket.cpp	/^void HttpSocket::processHtml(std::string &strHtml)$/;"	f	class:HttpSocket
rParentScore	include/sqlite3.h	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
rScore	include/sqlite3.h	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info
remarkName	include/WxRecvMessage.h	/^		std::string remarkName;$/;"	m	class:WxRecvMessage
res	include/HttpSocket.h	/^		CURLcode res;$/;"	m	class:HttpSocket
res	include/WxInitMessage.h	/^		CURLcode res;$/;"	m	class:WxInitMessage
result	include/WxSqlite.h	/^		int result;$/;"	m	class:WxSqlite
selectSql	include/WxSqlite.h	/^		const char *selectSql;$/;"	m	class:WxSqlite
selectUserInfo	src/WxSqlite.cpp	/^bool WxSqlite::selectUserInfo(std::string Name)$/;"	f	class:WxSqlite
skey	include/HttpSocket.h	/^		std::string skey;$/;"	m	class:HttpSocket
skip	src/cjson.cpp	/^static const char *skip(const char *in) {while (in && *in && (unsigned char)*in<=32) in++; return in;}$/;"	f	file:
sqlite3	include/sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3_backup	include/sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_blob	include/sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_callback	include/sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_changegroup	include/sqlite3.h	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup
sqlite3_changeset_iter	include/sqlite3.h	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter
sqlite3_context	include/sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_data_directory	include/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_data_directory;$/;"	v
sqlite3_destructor_type	include/sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_file	include/sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	include/sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_index_constraint	include/sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	include/sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_info	include/sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	include/sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_orderby	include/sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_int64	include/sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_io_methods	include/sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	include/sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_mem_methods	include/sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	include/sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_module	include/sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	include/sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_mutex	include/sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_methods	include/sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	include/sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_pcache	include/sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	include/sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	include/sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_pcache_methods2	include/sqlite3.h	/^struct sqlite3_pcache_methods2 {$/;"	s
sqlite3_pcache_methods2	include/sqlite3.h	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2
sqlite3_pcache_page	include/sqlite3.h	/^struct sqlite3_pcache_page {$/;"	s
sqlite3_pcache_page	include/sqlite3.h	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page
sqlite3_rtree_dbl	include/sqlite3.h	/^  typedef double sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	include/sqlite3.h	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_geometry	include/sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	include/sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_query_info	include/sqlite3.h	/^struct sqlite3_rtree_query_info {$/;"	s
sqlite3_rtree_query_info	include/sqlite3.h	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info
sqlite3_session	include/sqlite3.h	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session
sqlite3_snapshot	include/sqlite3.h	/^typedef struct sqlite3_snapshot sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot
sqlite3_stmt	include/sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_syscall_ptr	include/sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_temp_directory	include/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_uint64	include/sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_value	include/sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_version	include/sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	include/sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	include/sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vtab	include/sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	include/sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab_cursor	include/sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	include/sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite_int64	include/sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	include/sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	include/sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_uint64	include/sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	include/sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	include/sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
string	include/cJSON.h	/^	char *string;				\/* The item's name string, if this item is the child of, or is in the list of subitems of an object. *\/$/;"	m	struct:cJSON
suffix_object	src/cjson.cpp	/^static void suffix_object(cJSON *prev,cJSON *item) {prev->next=item;item->prev=prev;}$/;"	f	file:
synccheck	src/WxRecvMessage.cpp	/^bool WxRecvMessage::synccheck()$/;"	f	class:WxRecvMessage
synckey	include/WxInitMessage.h	/^		std::string synckey;$/;"	m	class:WxInitMessage
synckey	include/WxRecvMessage.h	/^		std::string synckey;$/;"	m	class:WxRecvMessage
synckeyVal	include/WxInitMessage.h	/^		int synckeyVal[10];$/;"	m	class:WxInitMessage
szOsFile	include/sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
type	include/cJSON.h	/^	int type;					\/* The type of the item, as above. *\/$/;"	m	struct:cJSON
urlGet	src/HttpSocket.cpp	/^std::string HttpSocket::urlGet(const char *url)$/;"	f	class:HttpSocket
urlPost	src/HttpSocket.cpp	/^std::string HttpSocket::urlPost(const char *url,const char *jsonData)$/;"	f	class:HttpSocket
usable	include/sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
userName	include/WxInitMessage.h	/^		std::string userName;$/;"	m	class:WxInitMessage
userinfoId	src/WxSqlite.cpp	/^static int userinfoId = 0;$/;"	v	file:
uuid	include/HttpSocket.h	/^		std::string code , uuid;$/;"	m	class:HttpSocket
valuedouble	include/cJSON.h	/^	double valuedouble;			\/* The item's number, if type==cJSON_Number *\/$/;"	m	struct:cJSON
valueint	include/cJSON.h	/^	int valueint;				\/* The item's number, if type==cJSON_Number *\/$/;"	m	struct:cJSON
valuestring	include/cJSON.h	/^	char *valuestring;			\/* The item's string, if type==cJSON_String *\/$/;"	m	struct:cJSON
waitForLogin	src/HttpSocket.cpp	/^bool HttpSocket::waitForLogin()$/;"	f	class:HttpSocket
webWXbatchgetcontact	src/WxInitMessage.cpp	/^bool WxInitMessage::webWXbatchgetcontact()$/;"	f	class:WxInitMessage
webWXgetcontact	src/WxInitMessage.cpp	/^bool WxInitMessage::webWXgetcontact()$/;"	f	class:WxInitMessage
webWXinit	src/WxInitMessage.cpp	/^bool WxInitMessage::webWXinit()$/;"	f	class:WxInitMessage
webWXstatusnotify	src/WxInitMessage.cpp	/^bool WxInitMessage::webWXstatusnotify()$/;"	f	class:WxInitMessage
webWXsync	src/WxRecvMessage.cpp	/^bool WxRecvMessage::webWXsync()$/;"	f	class:WxRecvMessage
webWXsyncStart	src/WxRecvMessage.cpp	/^void WxRecvMessage::webWXsyncStart()$/;"	f	class:WxRecvMessage
write_data	main.cpp	/^size_t write_data(void *buffer, size_t size, size_t nmemb, void *userp) {  $/;"	f
write_data	src/HttpSocket.cpp	/^size_t write_data(char *ptr,size_t size,size_t nember,std::string *date)$/;"	f
write_image	src/HttpSocket.cpp	/^size_t write_image(void *ptr, size_t size, size_t nmemb, FILE *stream) {  $/;"	f
wxInit	include/WxInitMessage.h	/^		static WxInitMessage * wxInit;$/;"	m	class:WxInitMessage
wxInit	include/WxSqlite.h	/^		static WxSqlite * wxInit;$/;"	m	class:WxSqlite
wxInit	src/WxInitMessage.cpp	/^WxInitMessage *WxInitMessage::wxInit = NULL;$/;"	m	class:WxInitMessage	file:
wxInit	src/WxSqlite.cpp	/^WxSqlite *WxSqlite::wxInit = NULL;$/;"	m	class:WxSqlite	file:
wxLogInit	src/WxLog.cpp	/^bool WxLog::wxLogInit(const char *path)$/;"	f	class:WxLog
wxUserInfodb	include/WxSqlite.h	/^		sqlite3 * wxUserInfodb;$/;"	m	class:WxSqlite
wx_log	include/WxLog.h	/^		static WxLog *wx_log;$/;"	m	class:WxLog
wx_log	src/WxLog.cpp	/^WxLog * WxLog::wx_log = NULL;$/;"	m	class:WxLog	file:
wxsid	include/HttpSocket.h	/^		std::string wxsid;$/;"	m	class:HttpSocket
wxuin	include/HttpSocket.h	/^		std::string wxuin;$/;"	m	class:HttpSocket
xAccess	include/sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xBegin	include/sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBestIndex	include/sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xCachesize	include/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCachesize	include/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2
xCheckReservedLock	include/sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xClose	include/sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	include/sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xColumn	include/sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xColumnCount	include/sqlite3.h	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	include/sqlite3.h	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnText	include/sqlite3.h	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	include/sqlite3.h	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xCommit	include/sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xConnect	include/sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	include/sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	include/sqlite3.h	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	include/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCreate	include/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2
xCreateFunction	include/sqlite3.h	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateTokenizer	include/sqlite3.h	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCurrentTime	include/sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	include/sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xDelUser	include/sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelUser	include/sqlite3.h	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info
xDelete	include/sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDelete	include/sqlite3.h	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDestroy	include/sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	include/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDestroy	include/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xDeviceCharacteristics	include/sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDisconnect	include/sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDlClose	include/sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlError	include/sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlOpen	include/sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xEof	include/sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xFetch	include/sqlite3.h	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods
xFetch	include/sqlite3.h	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2
xFetch	include/sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFileControl	include/sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileSize	include/sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFilter	include/sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFindFunction	include/sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFindTokenizer	include/sqlite3.h	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFree	include/sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFullPathname	include/sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xGetAuxdata	include/sqlite3.h	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetLastError	include/sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	include/sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xInit	include/sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	include/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xInit	include/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xInst	include/sqlite3.h	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInstCount	include/sqlite3.h	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xLock	include/sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xMalloc	include/sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMutexAlloc	include/sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	include/sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	include/sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	include/sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	include/sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	include/sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	include/sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	include/sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	include/sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xNext	include/sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNextSystemCall	include/sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xOpen	include/sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	include/sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xPagecount	include/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xPagecount	include/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xPhraseCount	include/sqlite3.h	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	include/sqlite3.h	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	include/sqlite3.h	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	include/sqlite3.h	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	include/sqlite3.h	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	include/sqlite3.h	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xQueryPhrase	include/sqlite3.h	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xRandomness	include/sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRead	include/sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRealloc	include/sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xRekey	include/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*, $/;"	m	struct:sqlite3_pcache_methods2
xRekey	include/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRelease	include/sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRename	include/sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRollback	include/sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollbackTo	include/sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRoundup	include/sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRowCount	include/sqlite3.h	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowid	include/sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xRowid	include/sqlite3.h	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xSavepoint	include/sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSectorSize	include/sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSetAuxdata	include/sqlite3.h	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetSystemCall	include/sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xShmBarrier	include/sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmLock	include/sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmMap	include/sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	include/sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShrink	include/sqlite3.h	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xShutdown	include/sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	include/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xShutdown	include/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xSize	include/sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSleep	include/sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xSync	include/sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	include/sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xTokenize	include/sqlite3.h	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi
xTokenize	include/sqlite3.h	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer
xTruncate	include/sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	include/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xTruncate	include/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2
xUnfetch	include/sqlite3.h	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods
xUnlock	include/sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnpin	include/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2
xUnpin	include/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUpdate	include/sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xUserData	include/sqlite3.h	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xWrite	include/sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
zErrMsg	include/sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zName	include/sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
~HttpSocket	src/HttpSocket.cpp	/^HttpSocket::~HttpSocket()$/;"	f	class:HttpSocket
~WxInitMessage	src/WxInitMessage.cpp	/^WxInitMessage::~WxInitMessage()$/;"	f	class:WxInitMessage
~WxLog	src/WxLog.cpp	/^WxLog::~WxLog()$/;"	f	class:WxLog
~WxRecvMessage	src/WxRecvMessage.cpp	/^WxRecvMessage::~WxRecvMessage()$/;"	f	class:WxRecvMessage
~WxSendMessage	src/WxSendMessage.cpp	/^WxSendMessage::~WxSendMessage()$/;"	f	class:WxSendMessage
~WxSqlite	src/WxSqlite.cpp	/^WxSqlite::~WxSqlite()$/;"	f	class:WxSqlite
